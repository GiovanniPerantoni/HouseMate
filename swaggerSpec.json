{
  "openapi": "3.0.0",
  "info": {
    "title": "HouseMate",
    "description": "This API allows users residing in the same apartment to share expenses and see their contributions.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    }
  ],
  "paths": {
    "/apartment/users": {
      "get": {
        "summary": "Get apartment users",
        "description": "This method is used to get all the public information related to the users residing in the same apartment as the user.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "responses": {
          "200": {
            "description": "Everything went smoothly.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "userID",
                      "first_name",
                      "last_name",
                      "color"
                    ],
                    "properties": {
                      "userID": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "color": {
                        "type": "color"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "userID": "6290ec70f...",
                    "first_name": "John",
                    "last_name": "Doe",
                    "color": "#ffffff"
                  },
                  {
                    "userID": "2df0a1f9a...",
                    "first_name": "Alice",
                    "last_name": "Smith",
                    "color": "#a01eff"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/apartment/manage/info": {
      "get": {
        "summary": "Get apartment information",
        "description": "This method is used to get all the **general information** (name, address and rules) of the apartment where the user resides.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "responses": {
          "200": {
            "description": "Everything went smoothly.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "address",
                    "rules"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "rules": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "name": "Johns Apartment",
                  "address": "Via Dante Alighieri 12 Roma 00100",
                  "rules": "- NO overnight guests, NO loud music at night."
                }
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Add a new apartment or change apartment information",
        "description": "This method is used to create or modify the **general information** (name, address and rules) of the apartment where the user is owner.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Johns&Alices Apartment",
                "address": "Via Dante Alighieri 12 Roma 00100",
                "rules": "- NO overnight guests, NO loud music at night, NO pets."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly."
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login",
        "description": "This method is used to generate a new authentication `token` by giving the correct **user credentials**.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "pass"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "user's email (can be used only for 1 account)"
                  },
                  "pass": {
                    "type": "string",
                    "description": "user's password (clear text)"
                  }
                },
                "example": {
                  "email": "user@example.com",
                  "pass": "password"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token"
                  ],
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
                }
              }
            }
          },
          "400": {
            "description": "This response is sent when the body parameters are of the **wrong type** or if any body parameter is **missing**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid parameters in request."
                }
              }
            }
          },
          "401": {
            "description": "This response is sent in case of **invalid credentials**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid credentials."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Sign Up",
        "description": "This method is used to create a new account by giving the required information and, if successful, retrieve a new authentication `token`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "first_name",
                  "last_name",
                  "pass"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "user's email (can be used only for 1 account)"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "user's fist name(s)."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "user's last name(s)."
                  },
                  "pass": {
                    "type": "string",
                    "description": "user's password (clear text)"
                  }
                },
                "example": {
                  "email": "user@example.com",
                  "pass": "password"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token"
                  ],
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
                }
              }
            }
          },
          "400": {
            "description": "This response is sent if the email is already used or when the body parameters are of the **wrong type** or if any body parameter is **missing**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid parameters in request."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/apartment/expenses/view": {
      "get": {
        "summary": "Get shared expenses",
        "description": "This method is used to get the **shared expenses** of the users residing in the same apartment and the **total amount** of money spent by each.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "responses": {
          "200": {
            "description": "Everything went smoothly.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userID": {
                            "type": "string"
                          },
                          "total": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "expenses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userID": {
                            "type": "string"
                          },
                          "expenseID": {
                            "type": "string"
                          },
                          "date": {
                            "type": "date"
                          },
                          "price": {
                            "type": "number"
                          },
                          "product": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "totals": [
                    {
                      "userID": "6290ec70f...",
                      "total": 25
                    },
                    {
                      "userID": "2df0a1f9a...",
                      "total": 50.5
                    }
                  ],
                  "expenses": [
                    {
                      "userID": "6290ec70f...",
                      "expenseID": "13a0fd10a...",
                      "price": 25,
                      "product": "Small chair"
                    },
                    {
                      "userID": "2df0a1f9a...",
                      "expenseID": "4e5dcba29...",
                      "price": 45,
                      "product": "Weekly groceries"
                    },
                    {
                      "userID": "2df0a1f9a...",
                      "expenseID": "9fe1731ad...",
                      "price": 5.5,
                      "product": "Beverages"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/apartment/expenses/add": {
      "post": {
        "summary": "Add a new expense",
        "description": "This method is used to add **shared expenses**",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date",
                  "price",
                  "product"
                ],
                "properties": {
                  "date": {
                    "type": "date"
                  },
                  "price": {
                    "type": "number"
                  },
                  "product": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "date": "2022-01-01T12:00",
                "price": 10,
                "product": "Hamburger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly."
          },
          "400": {
            "description": "This response is sent if the price is negative, if the user doesn't reside in an apartment or when the body parameters are of the **wrong type** or if any body parameter is **missing**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid price."
                }
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/apartment/expenses/modify": {
      "patch": {
        "summary": "Modify an expense",
        "description": "This method is used to change one of the **shared expenses** which either has to belong to the current user if the user isn't the owner or doesn't have to, if the user is the owner.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "expenseID"
                ],
                "properties": {
                  "expenseID": {
                    "type": "string"
                  },
                  "date": {
                    "type": "date"
                  },
                  "price": {
                    "type": "number"
                  },
                  "product": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "expenseID": "4e5dcba29...",
                "date": "2022-01-02T13:45",
                "price": 5,
                "product": "Table spoons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly."
          },
          "400": {
            "description": "This response is sent if the price is negative, if the expense either doesn't exist or isn't modifiable by the user, or when the body parameters are of the **wrong type** or if any body parameter is **missing**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Can't access expense."
                }
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    },
    "/apartment/expenses/delete": {
      "patch": {
        "summary": "Delete an expense",
        "description": "This method is used to delete one of the **shared expenses** which either has to belong to the current user if the user isn't the owner or doesn't have to, if the user is the owner.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "Authentication token required for access.",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6I..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "expenseID"
                ],
                "properties": {
                  "expenseID": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "expenseID": "4e5dcba29..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything went smoothly."
          },
          "400": {
            "description": "This response is sent if the expense either doesn't exist or isn't modifiable by the user, or when the body parameters are of the **wrong type** or if any body parameter is **missing**.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Can't access expense."
                }
              }
            }
          },
          "401": {
            "description": "This response is sent if the provided authentication `token` is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Invalid or expired token."
                }
              }
            }
          },
          "403": {
            "description": "This response is sent if no authentication `token` is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "A token is required for authentication."
                }
              }
            }
          },
          "500": {
            "description": "This response is sent if some **unexpected internal error** occurs during execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "motivation"
                  ],
                  "properties": {
                    "motivation": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "motivation": "Unexpected error."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}